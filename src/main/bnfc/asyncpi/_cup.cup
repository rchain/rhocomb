// -*- Java -*- This Cup file was machine-generated by BNFC
package asyncpi;

action code {:
public java_cup.runtime.ComplexSymbolFactory.Location getLeftLocation(
    java_cup.runtime.ComplexSymbolFactory.Location ... locations) {
  for (java_cup.runtime.ComplexSymbolFactory.Location l : locations) {
    if (l != null) {
      return l;
    }
  }
  return null;
}
:}
parser code {:
  public asyncpi.Absyn.PProc pPProc() throws Exception
  {
    java_cup.runtime.Symbol res = parse();
    return (asyncpi.Absyn.PProc) res.value;
  }

public <B,A extends java.util.LinkedList<? super B>> A cons_(B x, A xs) { xs.addFirst(x); return xs; }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
  report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
  throw new Exception("Unrecoverable Syntax Error");
}

:}

nonterminal asyncpi.Absyn.PProc PProc;
nonterminal asyncpi.Absyn.PProc PProc1;
nonterminal asyncpi.Absyn.PComp PComp;
nonterminal asyncpi.Absyn.PName PName;
nonterminal asyncpi.Absyn.ListPName ListPName;
nonterminal asyncpi.Absyn.PVar PVar;

terminal _SYMB_0;    //   {
terminal _SYMB_1;    //   }
terminal _SYMB_2;    //   0
terminal _SYMB_3;    //   (
terminal _SYMB_4;    //   <-
terminal _SYMB_5;    //   )
terminal _SYMB_6;    //   !
terminal _SYMB_7;    //   *
terminal _SYMB_8;    //   |
terminal _SYMB_9;    //   _
terminal _SYMB_10;    //   ,
terminal _SYMB_11;    //   for
terminal _SYMB_12;    //   in
terminal _SYMB_13;    //   new







terminal String Var;


start with PProc;


PProc ::= PProc1:p_1  {: RESULT = p_1; :} 
  | PProc:p_1 _SYMB_8:p_2 PProc1:p_3  {: RESULT = new asyncpi.Absyn.PPar(p_1,p_3); :}
;
PProc1 ::= _SYMB_0:p_1 PProc:p_2 _SYMB_1:p_3  {: RESULT = p_2; :} 
  | PComp:p_1  {: RESULT = new asyncpi.Absyn.PInj(p_1); :}
  | _SYMB_7:p_1 PProc1:p_2  {: RESULT = new asyncpi.Absyn.PRep(p_2); :}
  | _SYMB_13:p_1 ListPName:p_2 _SYMB_12:p_3 PProc1:p_4  {: RESULT = new asyncpi.Absyn.PNew(p_2,p_4); :}
;
PComp ::= _SYMB_2:p_1  {: RESULT = new asyncpi.Absyn.PZero(); :} 
  | _SYMB_11:p_1 _SYMB_3:p_2 PName:p_3 _SYMB_4:p_4 PName:p_5 _SYMB_5:p_6 PProc1:p_7  {: RESULT = new asyncpi.Absyn.PInp(p_3,p_5,p_7); :}
  | PName:p_1 _SYMB_6:p_2 _SYMB_3:p_3 PName:p_4 _SYMB_5:p_5  {: RESULT = new asyncpi.Absyn.POutp(p_1,p_4); :}
;
PName ::= _SYMB_9:p_1  {: RESULT = new asyncpi.Absyn.NWild(); :} 
  | Var:p_1  {: RESULT = new asyncpi.Absyn.NVar(p_1); :}
;
ListPName ::=  /* empty */  {: RESULT = new asyncpi.Absyn.ListPName(); :} 
  | PName:p_1  {: RESULT = new asyncpi.Absyn.ListPName(); RESULT.addLast(p_1); :}
  | PName:p_1 _SYMB_10:p_2 ListPName:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
PVar ::= _SYMB_9:p_1  {: RESULT = new asyncpi.Absyn.PWild(); :} 
  | Var:p_1  {: RESULT = new asyncpi.Absyn.PVVar(p_1); :}
;

