
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package coop.rchain.rhocomb.pi2rhocomb;

import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\071\000\002\002\004\000\002\002\004\000\002\002" +
    "\004\000\002\002\004\000\002\002\003\000\002\002\003" +
    "\000\002\003\003\000\002\003\005\000\002\004\005\000" +
    "\002\004\003\000\002\004\004\000\002\004\006\000\002" +
    "\005\003\000\002\005\011\000\002\005\007\000\002\006" +
    "\003\000\002\006\003\000\002\007\002\000\002\007\003" +
    "\000\002\007\005\000\002\010\003\000\002\010\003\000" +
    "\002\011\003\000\002\011\005\000\002\012\005\000\002" +
    "\012\003\000\002\012\004\000\002\012\006\000\002\013" +
    "\003\000\002\013\010\000\002\013\006\000\002\013\012" +
    "\000\002\013\012\000\002\013\010\000\002\013\010\000" +
    "\002\013\010\000\002\014\003\000\002\014\003\000\002" +
    "\015\002\000\002\015\003\000\002\015\005\000\002\016" +
    "\003\000\002\016\003\000\002\017\003\000\002\017\005" +
    "\000\002\020\005\000\002\020\003\000\002\020\006\000" +
    "\002\021\003\000\002\021\010\000\002\021\006\000\002" +
    "\021\012\000\002\021\012\000\002\021\010\000\002\021" +
    "\010\000\002\021\010\000\002\022\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\247\000\034\004\013\005\011\006\010\007\006\011" +
    "\004\016\024\023\020\024\017\025\016\027\014\031\015" +
    "\032\012\034\007\001\002\000\014\002\uffd1\010\uffd1\014" +
    "\uffd1\017\uffd1\021\uffd1\001\002\000\014\002\uffd3\010\uffd3" +
    "\014\uffd3\017\uffd3\021\uffd3\001\002\000\026\007\006\011" +
    "\004\016\024\023\020\024\017\025\016\027\014\031\015" +
    "\032\012\034\007\001\002\000\004\012\241\001\002\000" +
    "\004\002\ufffc\001\002\000\020\007\160\011\157\016\162" +
    "\020\075\026\071\033\161\036\066\001\002\000\004\012" +
    "\233\001\002\000\036\007\101\011\077\016\076\020\075" +
    "\023\074\024\073\025\072\026\071\027\070\031\107\032" +
    "\106\033\105\034\103\036\066\001\002\000\004\012\061" +
    "\001\002\000\004\012\056\001\002\000\004\012\047\001" +
    "\002\000\004\012\042\001\002\000\004\012\035\001\002" +
    "\000\014\002\uffd6\010\uffd6\014\uffd6\017\uffd6\021\uffd6\001" +
    "\002\000\004\002\034\001\002\000\006\002\ufffd\017\032" +
    "\001\002\000\004\012\025\001\002\000\004\022\026\001" +
    "\002\000\026\007\006\011\004\016\024\023\020\024\017" +
    "\025\016\027\014\031\015\032\012\034\007\001\002\000" +
    "\004\014\030\001\002\000\014\002\uffd2\010\uffd2\014\uffd2" +
    "\017\uffd2\021\uffd2\001\002\000\010\014\uffc9\017\032\021" +
    "\uffc9\001\002\000\026\007\006\011\004\016\024\023\020" +
    "\024\017\025\016\027\014\031\015\032\012\034\007\001" +
    "\002\000\014\002\uffd5\010\uffd5\014\uffd5\017\uffd5\021\uffd5" +
    "\001\002\000\004\002\001\001\002\000\004\022\026\001" +
    "\002\000\004\021\037\001\002\000\004\022\026\001\002" +
    "\000\004\014\041\001\002\000\014\002\uffcb\010\uffcb\014" +
    "\uffcb\017\uffcb\021\uffcb\001\002\000\004\022\026\001\002" +
    "\000\004\021\044\001\002\000\004\022\026\001\002\000" +
    "\004\014\046\001\002\000\014\002\uffca\010\uffca\014\uffca" +
    "\017\uffca\021\uffca\001\002\000\004\022\026\001\002\000" +
    "\004\021\051\001\002\000\004\022\026\001\002\000\004" +
    "\021\053\001\002\000\004\022\026\001\002\000\004\014" +
    "\055\001\002\000\014\002\uffce\010\uffce\014\uffce\017\uffce" +
    "\021\uffce\001\002\000\004\022\026\001\002\000\004\014" +
    "\060\001\002\000\014\002\uffcf\010\uffcf\014\uffcf\017\uffcf" +
    "\021\uffcf\001\002\000\004\022\026\001\002\000\004\021" +
    "\063\001\002\000\004\022\026\001\002\000\004\014\065" +
    "\001\002\000\014\002\uffcc\010\uffcc\014\uffcc\017\uffcc\021" +
    "\uffcc\001\002\000\014\013\ufff1\014\ufff1\015\ufff1\021\ufff1" +
    "\030\ufff1\001\002\000\006\002\000\017\166\001\002\000" +
    "\004\012\226\001\002\000\004\012\220\001\002\000\004" +
    "\012\211\001\002\000\004\012\204\001\002\000\004\012" +
    "\177\001\002\000\014\013\ufff2\014\ufff2\015\ufff2\021\ufff2" +
    "\030\ufff2\001\002\000\036\007\101\011\077\016\076\020" +
    "\075\023\074\024\073\025\072\026\071\027\070\031\107" +
    "\032\106\033\105\034\103\036\066\001\002\000\010\002" +
    "\ufff5\010\ufff5\017\ufff5\001\002\000\010\002\uffe8\010\uffe8" +
    "\017\uffe8\001\002\000\036\007\101\011\077\016\076\020" +
    "\075\023\074\024\073\025\072\026\071\027\070\031\107" +
    "\032\106\033\105\034\103\036\066\001\002\000\010\002" +
    "\ufffb\010\ufffb\017\ufffb\001\002\000\004\012\170\001\002" +
    "\000\010\002\ufff8\010\ufff8\017\ufff8\001\002\000\012\020" +
    "\152\030\ufff0\035\130\036\066\001\002\000\004\012\143" +
    "\001\002\000\004\012\140\001\002\000\006\002\uffff\017" +
    "\117\001\002\000\010\002\uffeb\010\uffeb\017\uffeb\001\002" +
    "\000\004\015\113\001\002\000\004\012\114\001\002\000" +
    "\006\020\075\036\066\001\002\000\004\014\116\001\002" +
    "\000\010\002\ufff3\010\ufff3\017\ufff3\001\002\000\030\007" +
    "\121\011\120\016\124\023\074\024\073\025\072\027\070" +
    "\031\107\032\106\033\122\034\103\001\002\000\010\002" +
    "\uffe5\010\uffe5\017\uffe5\001\002\000\030\007\121\011\120" +
    "\016\124\023\074\024\073\025\072\027\070\031\107\032" +
    "\106\033\122\034\103\001\002\000\010\020\131\030\uffdb" +
    "\035\130\001\002\000\010\002\uffea\010\uffea\017\uffea\001" +
    "\002\000\030\007\121\011\120\016\124\023\074\024\073" +
    "\025\072\027\070\031\107\032\106\033\122\034\103\001" +
    "\002\000\010\002\uffe7\010\uffe7\017\uffe7\001\002\000\004" +
    "\030\134\001\002\000\006\021\132\030\uffda\001\002\000" +
    "\010\014\uffdc\021\uffdc\030\uffdc\001\002\000\010\014\uffdd" +
    "\021\uffdd\030\uffdd\001\002\000\010\020\131\030\uffdb\035" +
    "\130\001\002\000\004\030\uffd9\001\002\000\030\007\121" +
    "\011\120\016\124\023\074\024\073\025\072\027\070\031" +
    "\107\032\106\033\122\034\103\001\002\000\010\002\uffe6" +
    "\010\uffe6\017\uffe6\001\002\000\006\010\137\017\117\001" +
    "\002\000\010\002\uffe9\010\uffe9\017\uffe9\001\002\000\006" +
    "\020\131\035\130\001\002\000\004\014\142\001\002\000" +
    "\010\002\uffe3\010\uffe3\017\uffe3\001\002\000\006\020\131" +
    "\035\130\001\002\000\004\021\145\001\002\000\006\020" +
    "\131\035\130\001\002\000\004\014\147\001\002\000\010" +
    "\002\uffe4\010\uffe4\017\uffe4\001\002\000\004\030\155\001" +
    "\002\000\006\021\153\030\uffef\001\002\000\006\021\ufff2" +
    "\030\ufff2\001\002\000\010\020\075\030\ufff0\036\066\001" +
    "\002\000\004\030\uffee\001\002\000\020\007\160\011\157" +
    "\016\162\020\075\026\071\033\161\036\066\001\002\000" +
    "\010\002\ufff6\010\ufff6\017\ufff6\001\002\000\010\002\ufff5" +
    "\010\ufff5\017\ufff5\001\002\000\020\007\160\011\157\016" +
    "\162\020\075\026\071\033\161\036\066\001\002\000\010" +
    "\020\075\030\ufff0\036\066\001\002\000\020\007\160\011" +
    "\157\016\162\020\075\026\071\033\161\036\066\001\002" +
    "\000\010\002\ufff7\010\ufff7\017\ufff7\001\002\000\006\010" +
    "\165\017\166\001\002\000\010\002\ufff9\010\ufff9\017\ufff9" +
    "\001\002\000\020\007\160\011\157\016\162\020\075\026" +
    "\071\033\161\036\066\001\002\000\010\002\ufffa\010\ufffa" +
    "\017\ufffa\001\002\000\006\020\131\035\130\001\002\000" +
    "\004\021\172\001\002\000\006\020\131\035\130\001\002" +
    "\000\004\021\174\001\002\000\006\020\131\035\130\001" +
    "\002\000\004\014\176\001\002\000\010\002\uffe1\010\uffe1" +
    "\017\uffe1\001\002\000\006\020\131\035\130\001\002\000" +
    "\004\021\201\001\002\000\006\020\131\035\130\001\002" +
    "\000\004\014\203\001\002\000\010\002\uffdf\010\uffdf\017" +
    "\uffdf\001\002\000\006\020\131\035\130\001\002\000\004" +
    "\021\206\001\002\000\006\020\131\035\130\001\002\000" +
    "\004\014\210\001\002\000\010\002\uffde\010\uffde\017\uffde" +
    "\001\002\000\006\020\131\035\130\001\002\000\004\021" +
    "\213\001\002\000\006\020\131\035\130\001\002\000\004" +
    "\021\215\001\002\000\006\020\131\035\130\001\002\000" +
    "\004\014\217\001\002\000\010\002\uffe2\010\uffe2\017\uffe2" +
    "\001\002\000\006\020\075\036\066\001\002\000\004\013" +
    "\222\001\002\000\006\020\075\036\066\001\002\000\004" +
    "\014\224\001\002\000\020\007\160\011\157\016\162\020" +
    "\075\026\071\033\161\036\066\001\002\000\010\002\ufff4" +
    "\010\ufff4\017\ufff4\001\002\000\006\020\131\035\130\001" +
    "\002\000\004\021\230\001\002\000\006\020\131\035\130" +
    "\001\002\000\004\014\232\001\002\000\010\002\uffe0\010" +
    "\uffe0\017\uffe0\001\002\000\004\022\026\001\002\000\004" +
    "\021\235\001\002\000\004\022\026\001\002\000\004\014" +
    "\237\001\002\000\014\002\uffd0\010\uffd0\014\uffd0\017\uffd0" +
    "\021\uffd0\001\002\000\006\002\ufffe\017\166\001\002\000" +
    "\004\022\026\001\002\000\004\021\243\001\002\000\004" +
    "\022\026\001\002\000\004\021\245\001\002\000\004\022" +
    "\026\001\002\000\004\014\247\001\002\000\014\002\uffcd" +
    "\010\uffcd\014\uffcd\017\uffcd\021\uffcd\001\002\000\006\010" +
    "\251\017\032\001\002\000\014\002\uffd4\010\uffd4\014\uffd4" +
    "\017\uffd4\021\uffd4\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\247\000\012\002\021\017\022\020\020\021\004\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\017\247" +
    "\020\020\021\004\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\003\237\004\101\005\103\006\111\001\001" +
    "\000\002\001\001\000\020\003\066\004\101\005\103\006" +
    "\111\011\107\012\110\013\077\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\022\026\001\001\000" +
    "\010\017\030\020\020\021\004\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\020\032\021" +
    "\004\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\022\035\001\001\000\002\001\001\000\004\022\037\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\022\042" +
    "\001\001\000\002\001\001\000\004\022\044\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\022\047\001\001" +
    "\000\002\001\001\000\004\022\051\001\001\000\002\001" +
    "\001\000\004\022\053\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\022\056\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\022\061\001\001\000\002\001\001" +
    "\000\004\022\063\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\004\162\005\103" +
    "\006\111\012\124\013\077\001\001\000\002\001\001\000" +
    "\002\001\001\000\020\003\163\004\101\005\103\006\111" +
    "\011\135\012\110\013\077\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\006\150\007\147" +
    "\014\126\015\125\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\006\114\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\012\122\013\077\001\001" +
    "\000\002\001\001\000\010\011\135\012\110\013\077\001" +
    "\001\000\006\014\126\015\125\001\001\000\002\001\001" +
    "\000\006\012\124\013\077\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\014\126\015\132\001\001\000\002\001" +
    "\001\000\006\012\134\013\077\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\014\140\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\014\143" +
    "\001\001\000\002\001\001\000\004\014\145\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\006\150\007\153\001" +
    "\001\000\002\001\001\000\010\004\155\005\103\006\111" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\003" +
    "\163\004\101\005\103\006\111\001\001\000\006\006\150" +
    "\007\147\001\001\000\010\004\162\005\103\006\111\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\004\166\005\103\006\111\001\001\000\002\001" +
    "\001\000\004\014\170\001\001\000\002\001\001\000\004" +
    "\014\172\001\001\000\002\001\001\000\004\014\174\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\014\177" +
    "\001\001\000\002\001\001\000\004\014\201\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\014\204\001\001" +
    "\000\002\001\001\000\004\014\206\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\014\211\001\001\000\002" +
    "\001\001\000\004\014\213\001\001\000\002\001\001\000" +
    "\004\014\215\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\006\220\001\001\000\002\001\001\000\004\006" +
    "\222\001\001\000\002\001\001\000\010\004\224\005\103" +
    "\006\111\001\001\000\002\001\001\000\004\014\226\001" +
    "\001\000\002\001\001\000\004\014\230\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\022\233\001\001\000" +
    "\002\001\001\000\004\022\235\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\022\241\001" +
    "\001\000\002\001\001\000\004\022\243\001\001\000\002" +
    "\001\001\000\004\022\245\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



  public coop.rchain.rhocomb.pi2rhocomb.Absyn.Req pReq() throws Exception
  {
    java_cup.runtime.Symbol res = parse();
    return (coop.rchain.rhocomb.pi2rhocomb.Absyn.Req) res.value;
  }

public <B,A extends java.util.LinkedList<? super B>> A cons_(B x, A xs) { xs.addFirst(x); return xs; }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
  report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
  throw new Exception("Unrecoverable Syntax Error");
}



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {


public java_cup.runtime.ComplexSymbolFactory.Location getLeftLocation(
    java_cup.runtime.ComplexSymbolFactory.Location ... locations) {
  for (java_cup.runtime.ComplexSymbolFactory.Location l : locations) {
    if (l != null) {
      return l;
    }
  }
  return null;
}

  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Req EOF 
            {
              Object RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.Req start_val = (coop.rchain.rhocomb.pi2rhocomb.Absyn.Req)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Req ::= _SYMB_0 RCPProc 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.Req RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RqP2R(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Req",0, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Req ::= _SYMB_0 RCYProc 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.Req RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RqY2R(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Req",0, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Req ::= _SYMB_1 RCPProc 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.Req RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RqP2Y(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Req",0, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Req ::= RCRProc 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.Req RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RqEval(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Req",0, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Req ::= _SYMB_2 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.Req RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RqCmd(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Req",0, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // RCPProc ::= RCPProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPProc",1, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // RCPProc ::= RCPProc _SYMB_11 RCPProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPPar(p_1,p_3); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPProc",1, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // RCPProc1 ::= _SYMB_3 RCPProc _SYMB_4 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPProc1",2, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // RCPProc1 ::= RCPComp 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPComp p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPComp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPInj(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPProc1",2, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // RCPProc1 ::= _SYMB_10 RCPProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPRep(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPProc1",2, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // RCPProc1 ::= _SYMB_23 ListRCPName _SYMB_20 RCPProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCPName p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCPName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_4 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPNew(p_2,p_4); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPProc1",2, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // RCPComp ::= _SYMB_5 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPComp RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPZero(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPComp",3, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // RCPComp ::= _SYMB_18 _SYMB_6 RCPName _SYMB_7 RCPName _SYMB_8 RCPProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPComp RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_7 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPInp(p_3,p_5,p_7); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPComp",3, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // RCPComp ::= RCPName _SYMB_9 _SYMB_6 RCPName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPComp RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPName p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPName p_4 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPOutp(p_1,p_4); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPComp",3, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // RCPName ::= _SYMB_12 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPName RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPNWild(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPName",4, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // RCPName ::= Var 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPName RESULT =null;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPNVar(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPName",4, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // ListRCPName ::= 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCPName RESULT =null;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCPName(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListRCPName",5, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // ListRCPName ::= RCPName 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCPName RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPName p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPName)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCPName(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListRCPName",5, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // ListRCPName ::= RCPName _SYMB_13 ListRCPName 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCPName RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPName p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCPName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCPName)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListRCPName",5, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // RCPVar ::= _SYMB_12 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPVar RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPPWild(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPVar",6, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // RCPVar ::= Var 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPVar RESULT =null;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPPVVar(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPVar",6, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // RCYProc ::= RCYProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYProc",7, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // RCYProc ::= RCYProc _SYMB_11 RCYProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYPar(p_1,p_3); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYProc",7, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // RCYProc1 ::= _SYMB_3 RCYProc _SYMB_4 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYProc1",8, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // RCYProc1 ::= RCYComb 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYInj(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYProc1",8, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // RCYProc1 ::= _SYMB_10 RCYProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYStr(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYProc1",8, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // RCYProc1 ::= _SYMB_23 ListRCYName _SYMB_20 RCYProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCYName p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc p_4 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYNew(p_2,p_4); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYProc1",8, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // RCYComb ::= _SYMB_5 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYZero(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYComb",9, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // RCYComb ::= _SYMB_22 _SYMB_6 RCYName _SYMB_13 RCYName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYMsg(p_3,p_5); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYComb",9, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // RCYComb ::= _SYMB_21 _SYMB_6 RCYName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYKill(p_3); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYComb",9, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // RCYComb ::= _SYMB_17 _SYMB_6 RCYName _SYMB_13 RCYName _SYMB_13 RCYName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_7 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYDup(p_3,p_5,p_7); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYComb",9, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // RCYComb ::= _SYMB_24 _SYMB_6 RCYName _SYMB_13 RCYName _SYMB_13 RCYName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_7 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYSeq(p_3,p_5,p_7); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYComb",9, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // RCYComb ::= _SYMB_19 _SYMB_6 RCYName _SYMB_13 RCYName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYFwd(p_3,p_5); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYComb",9, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // RCYComb ::= _SYMB_15 _SYMB_6 RCYName _SYMB_13 RCYName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYBrl(p_3,p_5); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYComb",9, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // RCYComb ::= _SYMB_16 _SYMB_6 RCYName _SYMB_13 RCYName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYBrr(p_3,p_5); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYComb",9, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // RCYName ::= _SYMB_12 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYNWild(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYName",10, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // RCYName ::= CVar 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName RESULT =null;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYNVar(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYName",10, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // ListRCYName ::= 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCYName RESULT =null;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCYName(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListRCYName",11, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // ListRCYName ::= RCYName 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCYName RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCYName(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListRCYName",11, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // ListRCYName ::= RCYName _SYMB_13 ListRCYName 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCYName RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCYName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCYName)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListRCYName",11, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // RCYVar ::= _SYMB_12 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYVar RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPYWild(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYVar",12, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // RCYVar ::= CVar 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYVar RESULT =null;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPYVVar(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYVar",12, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // RCRProc ::= RCRProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRProc",13, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // RCRProc ::= RCRProc _SYMB_11 RCRProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRPar(p_1,p_3); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRProc",13, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // RCRProc1 ::= _SYMB_3 RCRProc _SYMB_4 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRProc1",14, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // RCRProc1 ::= RCRComb 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRInj(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRProc1",14, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // RCRProc1 ::= _SYMB_10 _SYMB_6 RCRName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRStr(p_3); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRProc1",14, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // RCRComb ::= _SYMB_5 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRZero(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRComb",15, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // RCRComb ::= _SYMB_22 _SYMB_6 RCRName _SYMB_13 RCRName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRMsg(p_3,p_5); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRComb",15, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // RCRComb ::= _SYMB_21 _SYMB_6 RCRName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRKill(p_3); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRComb",15, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // RCRComb ::= _SYMB_17 _SYMB_6 RCRName _SYMB_13 RCRName _SYMB_13 RCRName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_7 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRDup(p_3,p_5,p_7); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRComb",15, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // RCRComb ::= _SYMB_24 _SYMB_6 RCRName _SYMB_13 RCRName _SYMB_13 RCRName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_7 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRSeq(p_3,p_5,p_7); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRComb",15, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // RCRComb ::= _SYMB_19 _SYMB_6 RCRName _SYMB_13 RCRName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRFwd(p_3,p_5); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRComb",15, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // RCRComb ::= _SYMB_15 _SYMB_6 RCRName _SYMB_13 RCRName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRBrl(p_3,p_5); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRComb",15, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // RCRComb ::= _SYMB_16 _SYMB_6 RCRName _SYMB_13 RCRName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRBrr(p_3,p_5); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRComb",15, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // RCRName ::= _SYMB_14 RCRProc 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRQuot(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRName",16, RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
