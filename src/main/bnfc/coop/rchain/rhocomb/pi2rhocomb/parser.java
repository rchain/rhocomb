
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package coop.rchain.rhocomb.pi2rhocomb;

import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\060\000\002\002\004\000\002\002\004\000\002\002" +
    "\004\000\002\002\004\000\002\002\003\000\002\002\003" +
    "\000\002\003\003\000\002\003\005\000\002\004\005\000" +
    "\002\004\003\000\002\004\004\000\002\004\006\000\002" +
    "\005\003\000\002\005\011\000\002\005\007\000\002\006" +
    "\003\000\002\006\005\000\002\007\005\000\002\007\003" +
    "\000\002\007\004\000\002\007\006\000\002\010\003\000" +
    "\002\010\010\000\002\010\006\000\002\010\012\000\002" +
    "\010\012\000\002\010\010\000\002\010\010\000\002\010" +
    "\010\000\002\011\003\000\002\011\003\000\002\012\002" +
    "\000\002\012\003\000\002\012\005\000\002\013\003\000" +
    "\002\013\005\000\002\014\005\000\002\014\003\000\002" +
    "\014\006\000\002\015\003\000\002\015\010\000\002\015" +
    "\006\000\002\015\012\000\002\015\012\000\002\015\010" +
    "\000\002\015\010\000\002\015\010\000\002\016\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\242\000\034\004\014\005\012\006\010\007\006\011" +
    "\004\016\024\024\020\025\017\026\015\030\016\032\013" +
    "\033\011\035\007\001\002\000\014\002\uffda\010\uffda\014" +
    "\uffda\017\uffda\020\uffda\001\002\000\014\002\uffdc\010\uffdc" +
    "\014\uffdc\017\uffdc\020\uffdc\001\002\000\026\007\006\011" +
    "\004\016\024\024\020\025\017\026\015\030\016\032\013" +
    "\033\011\035\007\001\002\000\004\012\234\001\002\000" +
    "\004\002\ufffc\001\002\000\004\012\227\001\002\000\020" +
    "\007\166\011\073\016\170\021\071\027\065\034\167\037" +
    "\063\001\002\000\004\012\223\001\002\000\040\007\075" +
    "\011\073\016\072\021\071\024\070\025\067\026\066\027" +
    "\065\030\105\032\104\033\103\034\102\035\077\036\076" +
    "\037\063\001\002\000\004\012\054\001\002\000\004\012" +
    "\047\001\002\000\004\012\042\001\002\000\004\012\035" +
    "\001\002\000\014\002\uffdf\010\uffdf\014\uffdf\017\uffdf\020" +
    "\uffdf\001\002\000\004\002\034\001\002\000\006\002\ufffd" +
    "\017\032\001\002\000\004\012\025\001\002\000\004\023" +
    "\026\001\002\000\026\007\006\011\004\016\024\024\020" +
    "\025\017\026\015\030\016\032\013\033\011\035\007\001" +
    "\002\000\004\014\030\001\002\000\014\002\uffdb\010\uffdb" +
    "\014\uffdb\017\uffdb\020\uffdb\001\002\000\010\014\uffd2\017" +
    "\032\020\uffd2\001\002\000\026\007\006\011\004\016\024" +
    "\024\020\025\017\026\015\030\016\032\013\033\011\035" +
    "\007\001\002\000\014\002\uffde\010\uffde\014\uffde\017\uffde" +
    "\020\uffde\001\002\000\004\002\001\001\002\000\004\023" +
    "\026\001\002\000\004\020\037\001\002\000\004\023\026" +
    "\001\002\000\004\014\041\001\002\000\014\002\uffd4\010" +
    "\uffd4\014\uffd4\017\uffd4\020\uffd4\001\002\000\004\023\026" +
    "\001\002\000\004\020\044\001\002\000\004\023\026\001" +
    "\002\000\004\014\046\001\002\000\014\002\uffd3\010\uffd3" +
    "\014\uffd3\017\uffd3\020\uffd3\001\002\000\004\023\026\001" +
    "\002\000\004\020\051\001\002\000\004\023\026\001\002" +
    "\000\004\014\053\001\002\000\014\002\uffd5\010\uffd5\014" +
    "\uffd5\017\uffd5\020\uffd5\001\002\000\004\023\026\001\002" +
    "\000\004\020\056\001\002\000\004\023\026\001\002\000" +
    "\004\020\060\001\002\000\004\023\026\001\002\000\004" +
    "\014\062\001\002\000\014\002\uffd7\010\uffd7\014\uffd7\017" +
    "\uffd7\020\uffd7\001\002\000\016\013\uffe3\014\uffe3\015\uffe3" +
    "\020\uffe3\022\uffe3\031\uffe3\001\002\000\006\002\000\017" +
    "\164\001\002\000\004\012\215\001\002\000\004\012\206" +
    "\001\002\000\004\012\201\001\002\000\004\012\174\001" +
    "\002\000\016\013\uffe4\014\uffe4\015\uffe4\020\uffe4\022\uffe4" +
    "\031\uffe4\001\002\000\040\007\075\011\073\016\072\021" +
    "\071\024\070\025\067\026\066\027\065\030\105\032\104" +
    "\033\103\034\102\035\077\036\076\037\063\001\002\000" +
    "\010\002\ufff5\010\ufff5\017\ufff5\001\002\000\010\002\uffef" +
    "\010\uffef\017\uffef\001\002\000\040\007\075\011\073\016" +
    "\072\021\071\024\070\025\067\026\066\027\065\030\105" +
    "\032\104\033\103\034\102\035\077\036\076\037\063\001" +
    "\002\000\010\002\uffec\010\uffec\017\uffec\001\002\000\004" +
    "\012\153\001\002\000\010\002\ufffb\010\ufffb\017\ufffb\001" +
    "\002\000\010\002\ufff8\010\ufff8\017\ufff8\001\002\000\010" +
    "\021\071\031\uffe2\037\063\001\002\000\004\012\143\001" +
    "\002\000\004\012\140\001\002\000\004\012\133\001\002" +
    "\000\006\002\uffff\017\115\001\002\000\010\002\ufff2\010" +
    "\ufff2\017\ufff2\001\002\000\004\015\111\001\002\000\004" +
    "\012\112\001\002\000\006\021\071\037\063\001\002\000" +
    "\004\014\114\001\002\000\010\002\ufff3\010\ufff3\017\ufff3" +
    "\001\002\000\030\007\116\016\121\024\070\025\067\026" +
    "\066\030\105\032\104\033\103\034\117\035\077\036\076" +
    "\001\002\000\030\007\116\016\121\024\070\025\067\026" +
    "\066\030\105\032\104\033\103\034\117\035\077\036\076" +
    "\001\002\000\010\021\071\031\uffe2\037\063\001\002\000" +
    "\010\002\ufff1\010\ufff1\017\ufff1\001\002\000\030\007\116" +
    "\016\121\024\070\025\067\026\066\030\105\032\104\033" +
    "\103\034\117\035\077\036\076\001\002\000\010\002\uffee" +
    "\010\uffee\017\uffee\001\002\000\004\031\127\001\002\000" +
    "\006\022\125\031\uffe1\001\002\000\010\021\071\031\uffe2" +
    "\037\063\001\002\000\004\031\uffe0\001\002\000\030\007" +
    "\116\016\121\024\070\025\067\026\066\030\105\032\104" +
    "\033\103\034\117\035\077\036\076\001\002\000\010\002" +
    "\uffed\010\uffed\017\uffed\001\002\000\006\010\132\017\115" +
    "\001\002\000\010\002\ufff0\010\ufff0\017\ufff0\001\002\000" +
    "\006\021\071\037\063\001\002\000\004\020\135\001\002" +
    "\000\006\021\071\037\063\001\002\000\004\014\137\001" +
    "\002\000\010\002\uffe7\010\uffe7\017\uffe7\001\002\000\006" +
    "\021\071\037\063\001\002\000\004\014\142\001\002\000" +
    "\010\002\uffea\010\uffea\017\uffea\001\002\000\006\021\071" +
    "\037\063\001\002\000\004\020\145\001\002\000\006\021" +
    "\071\037\063\001\002\000\004\014\147\001\002\000\010" +
    "\002\uffeb\010\uffeb\017\uffeb\001\002\000\004\031\151\001" +
    "\002\000\040\007\075\011\073\016\072\021\071\024\070" +
    "\025\067\026\066\027\065\030\105\032\104\033\103\034" +
    "\102\035\077\036\076\037\063\001\002\000\010\002\ufff6" +
    "\010\ufff6\017\ufff6\001\002\000\006\021\071\037\063\001" +
    "\002\000\004\020\155\001\002\000\006\021\071\037\063" +
    "\001\002\000\004\020\157\001\002\000\006\021\071\037" +
    "\063\001\002\000\004\014\161\001\002\000\010\002\uffe8" +
    "\010\uffe8\017\uffe8\001\002\000\006\010\163\017\164\001" +
    "\002\000\010\002\ufff9\010\ufff9\017\ufff9\001\002\000\020" +
    "\007\166\011\073\016\170\021\071\027\065\034\167\037" +
    "\063\001\002\000\010\002\ufffa\010\ufffa\017\ufffa\001\002" +
    "\000\020\007\166\011\073\016\170\021\071\027\065\034" +
    "\167\037\063\001\002\000\010\021\071\031\uffe2\037\063" +
    "\001\002\000\020\007\166\011\073\016\170\021\071\027" +
    "\065\034\167\037\063\001\002\000\010\002\ufff7\010\ufff7" +
    "\017\ufff7\001\002\000\004\031\173\001\002\000\020\007" +
    "\166\011\073\016\170\021\071\027\065\034\167\037\063" +
    "\001\002\000\006\021\071\037\063\001\002\000\004\020" +
    "\176\001\002\000\006\021\071\037\063\001\002\000\004" +
    "\014\200\001\002\000\010\002\uffe6\010\uffe6\017\uffe6\001" +
    "\002\000\006\021\071\037\063\001\002\000\004\020\203" +
    "\001\002\000\006\021\071\037\063\001\002\000\004\014" +
    "\205\001\002\000\010\002\uffe5\010\uffe5\017\uffe5\001\002" +
    "\000\006\021\071\037\063\001\002\000\004\020\210\001" +
    "\002\000\006\021\071\037\063\001\002\000\004\020\212" +
    "\001\002\000\006\021\071\037\063\001\002\000\004\014" +
    "\214\001\002\000\010\002\uffe9\010\uffe9\017\uffe9\001\002" +
    "\000\006\021\071\037\063\001\002\000\004\013\217\001" +
    "\002\000\006\021\071\037\063\001\002\000\004\014\221" +
    "\001\002\000\020\007\166\011\073\016\170\021\071\027" +
    "\065\034\167\037\063\001\002\000\010\002\ufff4\010\ufff4" +
    "\017\ufff4\001\002\000\004\023\026\001\002\000\004\014" +
    "\225\001\002\000\014\002\uffd8\010\uffd8\014\uffd8\017\uffd8" +
    "\020\uffd8\001\002\000\006\002\ufffe\017\164\001\002\000" +
    "\004\023\026\001\002\000\004\020\231\001\002\000\004" +
    "\023\026\001\002\000\004\014\233\001\002\000\014\002" +
    "\uffd9\010\uffd9\014\uffd9\017\uffd9\020\uffd9\001\002\000\004" +
    "\023\026\001\002\000\004\020\236\001\002\000\004\023" +
    "\026\001\002\000\004\020\240\001\002\000\004\023\026" +
    "\001\002\000\004\014\242\001\002\000\014\002\uffd6\010" +
    "\uffd6\014\uffd6\017\uffd6\020\uffd6\001\002\000\006\010\244" +
    "\017\032\001\002\000\014\002\uffdd\010\uffdd\014\uffdd\017" +
    "\uffdd\020\uffdd\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\242\000\012\002\021\013\022\014\020\015\004\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\013\242" +
    "\014\020\015\004\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\003\225\004\077\005\100" +
    "\011\107\001\001\000\002\001\001\000\020\003\063\004" +
    "\077\005\100\006\105\007\106\010\073\011\107\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\016\026\001\001\000" +
    "\010\013\030\014\020\015\004\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\014\032\015" +
    "\004\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\016\035\001\001\000\002\001\001\000\004\016\037\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\016\042" +
    "\001\001\000\002\001\001\000\004\016\044\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\016\047\001\001" +
    "\000\002\001\001\000\004\016\051\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\016\054\001\001\000\002" +
    "\001\001\000\004\016\056\001\001\000\002\001\001\000" +
    "\004\016\060\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\004\170\005\100\007\121\010\073\011" +
    "\107\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\003\161\004\077\005\100\006\130\007\106\010\073\011" +
    "\107\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\011\123\012\147\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\011\112\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\007\117\010\073\001\001\000" +
    "\010\006\130\007\106\010\073\001\001\000\006\011\123" +
    "\012\122\001\001\000\002\001\001\000\006\007\121\010" +
    "\073\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\011\123\012\125\001\001\000\002\001" +
    "\001\000\006\007\127\010\073\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\011\133\001" +
    "\001\000\002\001\001\000\004\011\135\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\011\140\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\011\143\001\001" +
    "\000\002\001\001\000\004\011\145\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\004\151" +
    "\005\100\007\127\010\073\011\107\001\001\000\002\001" +
    "\001\000\004\011\153\001\001\000\002\001\001\000\004" +
    "\011\155\001\001\000\002\001\001\000\004\011\157\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\004\164\005\100\011\107\001" +
    "\001\000\002\001\001\000\012\003\161\004\077\005\100" +
    "\011\107\001\001\000\006\011\123\012\171\001\001\000" +
    "\010\004\170\005\100\011\107\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\004\151\005\100\011\107\001" +
    "\001\000\004\011\174\001\001\000\002\001\001\000\004" +
    "\011\176\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\011\201\001\001\000\002\001\001\000\004\011\203" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\011" +
    "\206\001\001\000\002\001\001\000\004\011\210\001\001" +
    "\000\002\001\001\000\004\011\212\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\011\215\001\001\000\002" +
    "\001\001\000\004\011\217\001\001\000\002\001\001\000" +
    "\010\004\221\005\100\011\107\001\001\000\002\001\001" +
    "\000\004\016\223\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\016\227\001\001\000\002" +
    "\001\001\000\004\016\231\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\016\234\001\001\000\002\001\001" +
    "\000\004\016\236\001\001\000\002\001\001\000\004\016" +
    "\240\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



  public coop.rchain.rhocomb.pi2rhocomb.Absyn.Req pReq() throws Exception
  {
    java_cup.runtime.Symbol res = parse();
    return (coop.rchain.rhocomb.pi2rhocomb.Absyn.Req) res.value;
  }

public <B,A extends java.util.LinkedList<? super B>> A cons_(B x, A xs) { xs.addFirst(x); return xs; }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
  report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
  throw new Exception("Unrecoverable Syntax Error");
}



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {


public java_cup.runtime.ComplexSymbolFactory.Location getLeftLocation(
    java_cup.runtime.ComplexSymbolFactory.Location ... locations) {
  for (java_cup.runtime.ComplexSymbolFactory.Location l : locations) {
    if (l != null) {
      return l;
    }
  }
  return null;
}

  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Req EOF 
            {
              Object RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.Req start_val = (coop.rchain.rhocomb.pi2rhocomb.Absyn.Req)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Req ::= _SYMB_0 RCPProc 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.Req RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RqP2R(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Req",0, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Req ::= _SYMB_0 RCYProc 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.Req RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RqY2R(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Req",0, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Req ::= _SYMB_1 RCPProc 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.Req RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RqP2Y(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Req",0, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Req ::= RCRProc 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.Req RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RqEval(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Req",0, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Req ::= _SYMB_2 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.Req RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RqCmd(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Req",0, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // RCPProc ::= RCPProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPProc",1, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // RCPProc ::= RCPProc _SYMB_11 RCPProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPPar(p_1,p_3); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPProc",1, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // RCPProc1 ::= _SYMB_3 RCPProc _SYMB_4 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPProc1",2, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // RCPProc1 ::= RCPComp 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPComp p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPComp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPInj(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPProc1",2, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // RCPProc1 ::= _SYMB_10 RCPProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPRep(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPProc1",2, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // RCPProc1 ::= _SYMB_24 ListRCUName _SYMB_21 RCPProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCUName p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_4 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPNew(p_2,p_4); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPProc1",2, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // RCPComp ::= _SYMB_5 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPComp RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPZero(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPComp",3, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // RCPComp ::= _SYMB_19 _SYMB_6 RCUName _SYMB_7 RCUName _SYMB_8 RCPProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPComp RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc p_7 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPInp(p_3,p_5,p_7); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPComp",3, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // RCPComp ::= RCUName _SYMB_9 _SYMB_6 RCUName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPComp RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_4 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCPOutp(p_1,p_4); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCPComp",3, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // RCYProc ::= RCYProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYProc",4, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // RCYProc ::= RCYProc _SYMB_11 RCYProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYPar(p_1,p_3); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYProc",4, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // RCYProc1 ::= _SYMB_3 RCYProc _SYMB_4 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYProc1",5, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // RCYProc1 ::= RCYComb 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYInj(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYProc1",5, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // RCYProc1 ::= _SYMB_10 RCYProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYStr(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYProc1",5, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // RCYProc1 ::= _SYMB_24 ListRCUName _SYMB_21 RCYProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCUName p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc p_4 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYNew(p_2,p_4); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYProc1",5, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // RCYComb ::= _SYMB_26 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYZero(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYComb",6, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // RCYComb ::= _SYMB_23 _SYMB_6 RCUName _SYMB_12 RCUName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYMsg(p_3,p_5); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYComb",6, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // RCYComb ::= _SYMB_22 _SYMB_6 RCUName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYKill(p_3); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYComb",6, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // RCYComb ::= _SYMB_18 _SYMB_6 RCUName _SYMB_12 RCUName _SYMB_12 RCUName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_7 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYDup(p_3,p_5,p_7); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYComb",6, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // RCYComb ::= _SYMB_25 _SYMB_6 RCUName _SYMB_12 RCUName _SYMB_12 RCUName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_7 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYSeq(p_3,p_5,p_7); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYComb",6, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // RCYComb ::= _SYMB_20 _SYMB_6 RCUName _SYMB_12 RCUName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYFwd(p_3,p_5); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYComb",6, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // RCYComb ::= _SYMB_16 _SYMB_6 RCUName _SYMB_12 RCUName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYBrl(p_3,p_5); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYComb",6, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // RCYComb ::= _SYMB_17 _SYMB_6 RCUName _SYMB_12 RCUName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCYBrr(p_3,p_5); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCYComb",6, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // RCUName ::= _SYMB_13 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUNWild(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCUName",7, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // RCUName ::= Var 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName RESULT =null;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUNVar(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCUName",7, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // ListRCUName ::= 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCUName RESULT =null;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCUName(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListRCUName",8, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // ListRCUName ::= RCUName 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCUName RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCUName(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListRCUName",8, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // ListRCUName ::= RCUName _SYMB_14 ListRCUName 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCUName RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCUName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCUName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.ListRCUName)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListRCUName",8, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // RCRProc ::= RCRProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRProc",9, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // RCRProc ::= RCRProc _SYMB_11 RCRProc1 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRPar(p_1,p_3); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRProc",9, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // RCRProc1 ::= _SYMB_3 RCRProc _SYMB_4 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRProc1",10, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // RCRProc1 ::= RCRComb 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc RESULT =null;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb p_1 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRInj(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRProc1",10, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // RCRProc1 ::= _SYMB_10 _SYMB_6 RCRName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRStr(p_3); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRProc1",10, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // RCRComb ::= _SYMB_5 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRZero(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRComb",11, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // RCRComb ::= _SYMB_23 _SYMB_6 RCRName _SYMB_12 RCRName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRMsg(p_3,p_5); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRComb",11, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // RCRComb ::= _SYMB_22 _SYMB_6 RCRName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRKill(p_3); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRComb",11, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // RCRComb ::= _SYMB_18 _SYMB_6 RCRName _SYMB_12 RCRName _SYMB_12 RCRName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_7 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRDup(p_3,p_5,p_7); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRComb",11, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // RCRComb ::= _SYMB_25 _SYMB_6 RCRName _SYMB_12 RCRName _SYMB_12 RCRName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_7 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRSeq(p_3,p_5,p_7); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRComb",11, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // RCRComb ::= _SYMB_20 _SYMB_6 RCRName _SYMB_12 RCRName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRFwd(p_3,p_5); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRComb",11, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // RCRComb ::= _SYMB_16 _SYMB_6 RCRName _SYMB_12 RCRName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRBrl(p_3,p_5); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRComb",11, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // RCRComb ::= _SYMB_17 _SYMB_6 RCRName _SYMB_12 RCRName _SYMB_8 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRComb RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_3 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName p_5 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRBrr(p_3,p_5); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRComb",11, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // RCRName ::= _SYMB_15 RCRProc 
            {
              coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRName RESULT =null;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc p_2 = (coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRProc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new coop.rchain.rhocomb.pi2rhocomb.Absyn.RCRQuot(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RCRName",12, RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
